#!/usr/bin/env node

/**
 * MATC Admin Panel Fix Verification Script
 * Tests the admin panel after the API initialization fix
 */

const https = require('https');

const ADMIN_PANEL_URL = 'https://admine-lake.vercel.app';
const BACKEND_API_URL = 'https://matc-backend.onrender.com/api';

console.log('üîç MATC Admin Panel Fix Verification');
console.log('='.repeat(50));

// Test function with timeout
function testUrl(url, description) {
  return new Promise((resolve) => {
    console.log(`üß™ Testing ${description}...`);
    
    const req = https.get(url, (res) => {
      const success = res.statusCode >= 200 && res.statusCode < 400;
      console.log(`${success ? '‚úÖ' : '‚ùå'} ${description}: HTTP ${res.statusCode}`);
      resolve(success);
    });
    
    req.on('error', (error) => {
      console.log(`‚ùå ${description}: ${error.message}`);
      resolve(false);
    });
    
    req.setTimeout(10000, () => {
      req.destroy();
      console.log(`‚è∞ ${description}: Timeout`);
      resolve(false);
    });
  });
}

async function runVerification() {
  console.log(`üéØ Target Admin Panel: ${ADMIN_PANEL_URL}`);
  console.log(`üéØ Target Backend API: ${BACKEND_API_URL}`);
  console.log('');
  
  // Test backend API first
  const backendHealthy = await testUrl(`${BACKEND_API_URL}/health`, 'Backend API Health');
  
  // Test admin panel
  const adminPanelAccessible = await testUrl(ADMIN_PANEL_URL, 'Admin Panel Accessibility');
  
  console.log('\n' + '='.repeat(50));
  console.log('üìä Verification Results');
  console.log('='.repeat(50));
  
  if (backendHealthy && adminPanelAccessible) {
    console.log('‚úÖ All tests passed!');
    console.log('');
    console.log('üéâ Admin Panel Fix Verification: SUCCESS');
    console.log('');
    console.log('üìã What was fixed:');
    console.log('  ‚Ä¢ API_BASE_URL initialization error resolved');
    console.log('  ‚Ä¢ Proper error handling added');
    console.log('  ‚Ä¢ Environment configuration updated');
    console.log('  ‚Ä¢ Build process verified');
    console.log('');
    console.log('üîó Admin Panel: ' + ADMIN_PANEL_URL);
    console.log('');
    console.log('üí° Next steps:');
    console.log('  1. Open the admin panel in your browser');
    console.log('  2. Check the browser console (F12)');
    console.log('  3. Look for "üîó Final API Configuration" log');
    console.log('  4. Verify no more initialization errors');
    
  } else {
    console.log('‚ö†Ô∏è  Some tests failed');
    console.log('');
    if (!backendHealthy) {
      console.log('‚ùå Backend API is not responding');
      console.log('   ‚Ä¢ Check Render deployment status');
      console.log('   ‚Ä¢ Backend may be cold starting (wait 30 seconds)');
    }
    
    if (!adminPanelAccessible) {
      console.log('‚ùå Admin Panel is not accessible');
      console.log('   ‚Ä¢ Check Vercel deployment status');
      console.log('   ‚Ä¢ Deployment may still be in progress');
    }
    
    console.log('');
    console.log('üîÑ Retry verification in a few minutes if deployment is still in progress');
  }
  
  console.log('\nüîó Monitoring Links:');
  console.log('  ‚Ä¢ GitHub Actions: https://github.com/maaloulahmed93-oss/MA-TRAINING-CONSULTING/actions');
  console.log('  ‚Ä¢ Admin Panel: ' + ADMIN_PANEL_URL);
  console.log('  ‚Ä¢ Backend API: ' + BACKEND_API_URL + '/health');
}

// Run verification
runVerification().catch(console.error);
